<!DOCTYPE html>
<html>
  <head>
    <title>Distance Matrix service</title>
    <style>
      #map {
        height: 500px; 
        width: 500px;
      }
    </style>

    <style>
      #outputDiv {
        font-family: 'Roboto','sans-serif';
        position: absolute;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
      }
    </style>
  </head>


  <body>
    <input id="start" type="textbox" value="richmond, bc" style="display: none" onchange="calcRoute();">
    <input id="end" type="textbox" value="T6H 0B1" style="display: none" onchange="calcRoute();">
  
    <div id="map"></div>
    <div id="outputDiv"></div>

    <script>
function initMap() {
  var directionsService = new google.maps.DirectionsService;
  var directionsDisplay = new google.maps.DirectionsRenderer;
  var bounds = new google.maps.LatLngBounds;

  var origin = document.getElementById('start').value
  var destination = document.getElementById('end').value

  
  var map = new google.maps.Map(document.getElementById('map'), {
    // center: {lat: 55.53, lng: 9.4},
    zoom: 10
  });
  var geocoder = new google.maps.Geocoder;

  var service = new google.maps.DistanceMatrixService;
  service.getDistanceMatrix({
    origins: [origin],
    destinations: [destination],
    travelMode: google.maps.TravelMode.DRIVING,
    unitSystem: google.maps.UnitSystem.METRIC,
    avoidHighways: false,
    avoidTolls: false
  }, function(response, status) {
    if (status !== google.maps.DistanceMatrixStatus.OK) {
      alert('Error was: ' + status);
    } else {
      var originList = response.originAddresses;
      var destinationList = response.destinationAddresses;
      var outputDiv = document.getElementById('outputDiv');
      outputDiv.innerHTML = '';


      for (var i = 0; i < originList.length; i++) {
        var results = response.rows[i].elements;
        geocoder.geocode({'address': originList[i]});
        for (var j = 0; j < results.length; j++) {
          geocoder.geocode({'address': destinationList[j]});
          outputDiv.innerHTML += originList[i] + ' to ' + destinationList[j] +
              ': ' + results[j].distance.text + ' in ' +
              results[j].duration.text + '<br>';
        }
      }
    }
  });
  directionsDisplay.setMap(map);

  calculateAndDisplayRoute(directionsService, directionsDisplay);
}

function calculateAndDisplayRoute(directionsService, directionsDisplay) {
  directionsService.route({
    origin: document.getElementById('start').value,
    destination: document.getElementById('end').value,
    travelMode: google.maps.TravelMode.DRIVING
  }, function(response, status) {
    if (status === google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);
    } else {
      window.alert('Directions request failed due to ' + status);
    }
  });
}


    </script>
    <script src="https://maps.googleapis.com/maps/api/js?signed_in=true&callback=initMap"
        async defer></script>
  </body>
</html>